{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoItem/TodoItem.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["Option","TodoItem","todo","selectUser","onChange","className","classnames","completed","type","checked","readOnly","title","userId","onClick","TodoList","todos","useState","search","setSearch","selected","setSelected","visibleTodos","inprogress","filter","filtredTodos","toLowerCase","includes","value","placeholder","event","target","all","map","id","API_URL","getTodos","a","fetch","response","json","getUser","users","CurrentUser","currentUser","setCurrentUser","getCurrentUser","useEffect","name","email","phone","App","selectedUserId","setSelectedUserId","setTodos","getServerTodos","children","copyChildren","copy","index","findIndex","splice","sort","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeb1d745.chunk.js","sourcesContent":["import React, { useState, ChangeEvent } from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport './TodoList.scss';\n\ninterface Props {\n  todos: Todo[],\n  selectUser: ((id: number) => void),\n  onChange: ((children: Todo) => void),\n}\n\nenum Option {\n  all = 'all',\n  inprogress = 'inprogress',\n  completed = 'completed',\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectUser,\n  onChange,\n}) => {\n  const [search, setSearch] = useState('');\n  const [selected, setSelected] = useState('all');\n\n  const filtredTodos = () => {\n    switch (selected) {\n      case Option.inprogress:\n        return todos.filter(todo => todo.completed === false);\n      case Option.completed:\n        return todos.filter(todo => todo.completed === true);\n      default:\n        return todos;\n    }\n  };\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearch(event.target.value);\n  };\n\n  const handleSelectChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelected(event.target.value);\n  };\n\n  const visibleTodos = filtredTodos()\n    .filter(todo => todo.title.toLowerCase().includes(search.toLowerCase()));\n\n  return (\n    <div className=\"TodoList\">\n      <h2 className=\"TodoList__title\">Todos:</h2>\n      <div className=\"TodoList__filters\">\n        <input\n          type=\"text\"\n          data-cy=\"filterByTitle\"\n          className=\"TodoList__search\"\n          value={search}\n          placeholder=\"Try to find\"\n          onChange={handleInputChange}\n        />\n\n        <select\n          value={selected}\n          className=\"TodoList__select\"\n          onChange={handleSelectChange}\n        >\n          <option value={Option.all}>All</option>\n          <option value={Option.inprogress}>In progress</option>\n          <option value={Option.completed}>Completed</option>\n        </select>\n      </div>\n\n      <div className=\"TodoList__list-container\">\n        <ul\n          className=\"TodoList__list\"\n          data-cy=\"listOfTodos\"\n        >\n          {visibleTodos.map(todo => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              selectUser={selectUser}\n              onChange={onChange}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\ninterface Props {\n  todo: Todo,\n  selectUser: ((id: number) => void),\n  onChange: ((children: Todo) => void),\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectUser,\n  onChange,\n}) => {\n  return (\n    <li className={classnames(\n      'TodoList__item',\n      { 'TodoList__item--checked': todo.completed },\n    )}\n    >\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={() => onChange(todo)}\n          readOnly\n        />\n        <p>{todo.title}</p>\n      </label>\n      {todo.userId && (\n        <button\n          className=\"\n            TodoList__user-button\n            TodoList__user-button--selected\n            button\n          \"\n          type=\"button\"\n          data-cy=\"userButton\"\n          onClick={() => selectUser(todo.userId)}\n        >\n          User&nbsp;\n          {todo.userId}\n        </button>\n      )}\n    </li>\n  );\n};\n","const API_URL = 'https://mate.academy/students-api';\n\nexport async function getTodos() {\n  const response = await fetch(`${API_URL}/todos`);\n\n  return response.json();\n}\n\nexport async function getUser(id: number) {\n  const users = await fetch(`${API_URL}/users/${id}`);\n\n  return users.json();\n}\n","import React, { useEffect, useState } from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\ninterface Props {\n  id: number,\n  selectUser: (id: number) => void;\n}\n\nexport const CurrentUser: React.FC<Props> = ({\n  id,\n  selectUser,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  const getCurrentUser = async (userId: number) => {\n    const response = await getUser(userId);\n\n    setCurrentUser(response);\n  };\n\n  useEffect(() => {\n    getCurrentUser(id);\n  }, [id]);\n\n  return (\n    <>\n      {currentUser && (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:&nbsp;\n              {id}\n            </span>\n          </h2>\n\n          <h3\n            className=\"CurrentUser__name\"\n            data-cy=\"userName\"\n          >\n            {currentUser.name}\n          </h3>\n          <p className=\"CurrentUser__email\">{currentUser.email}</p>\n          <p className=\"CurrentUser__phone\">{currentUser.phone}</p>\n        </div>\n      )}\n      <button\n        type=\"button\"\n        className=\"CurrentUser__clear button\"\n        onClick={() => selectUser(0)}\n      >\n        Clear\n      </button>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const onChange = (children: Todo) => {\n    const copyChildren = { ...children };\n    const copy = [...todos];\n    const index = todos.findIndex(todo => todo.id === children.id);\n\n    copy.splice(index, 1);\n    copyChildren.completed = !children.completed;\n    setTodos([\n      ...copy,\n      copyChildren,\n    ].sort((a, b) => a.id - b.id));\n  };\n\n  const getServerTodos = async () => {\n    const response = await getTodos();\n\n    setTodos(response);\n  };\n\n  const selectUser = (id: number) => {\n    setSelectedUserId(id);\n  };\n\n  useEffect(() => {\n    getServerTodos();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          selectUser={selectUser}\n          onChange={onChange}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              id={selectedUserId}\n              selectUser={selectUser}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}