{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoItem","todo","selectUser","useState","completed","setCompleted","className","classnames","type","onChange","prev","readOnly","title","userId","onClick","TodoList","todos","search","setSearch","selected","setSelected","visibleTodos","filter","filtredTodos","includes","value","placeholder","event","target","map","id","API_URL","getTodos","a","fetch","response","json","getUser","users","CurrentUser","currentUser","setCurrentUser","getCurrentUser","useEffect","name","email","phone","App","selectedUserId","setSelectedUserId","setTodos","getServerTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fe0fe37.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classnames from 'classnames';\n\ninterface Props {\n  todo: Todo,\n  selectUser: ((id: number) => void),\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectUser,\n}) => {\n  const [completed, setCompleted] = useState(false);\n\n  const changeComplete = () => {\n    setCompleted((prev) => !prev);\n  };\n\n  return (\n    <li className={classnames(\n      'TodoList__item',\n      { 'TodoList__item--checked': completed || todo.completed },\n    )}\n    >\n      <label>\n        <input\n          type=\"checkbox\"\n          onChange={changeComplete}\n          readOnly\n        />\n        <p>{todo.title}</p>\n      </label>\n      {todo.userId && (\n        <button\n          className=\"\n            TodoList__user-button\n            TodoList__user-button--selected\n            button\n          \"\n          type=\"button\"\n          data-cy=\"userButton\"\n          onClick={() => selectUser(todo.userId)}\n        >\n          User&nbsp;\n          {todo.userId}\n        </button>\n      )}\n    </li>\n  );\n};\n","import React, { useState } from 'react';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport './TodoList.scss';\n\ninterface Props {\n  todos: Todo[],\n  selectUser: ((id: number) => void),\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectUser,\n}) => {\n  const [search, setSearch] = useState('');\n  const [selected, setSelected] = useState('all');\n\n  const filtredTodos = () => {\n    switch (selected) {\n      case 'inpropress':\n        return todos.filter(todo => todo.completed === false);\n      case 'completed':\n        return todos.filter(todo => todo.completed === true);\n      default:\n        return todos;\n    }\n  };\n\n  const visibleTodos = filtredTodos()\n    .filter(todo => todo.title.includes(search));\n\n  return (\n    <div className=\"TodoList\">\n      <h2 className=\"TodoList__title\">Todos:</h2>\n      <div className=\"TodoList__filters\">\n        <input\n          type=\"text\"\n          data-cy=\"filterByTitle\"\n          className=\"TodoList__search\"\n          value={search}\n          placeholder=\"Try to find\"\n          onChange={(event) => {\n            setSearch(event.target.value);\n          }}\n        />\n\n        <select\n          value={selected}\n          className=\"TodoList__select\"\n          onChange={(event) => {\n            setSelected(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"inpropress\">In progress</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </div>\n\n      <div className=\"TodoList__list-container\">\n        <ul\n          className=\"TodoList__list\"\n          data-cy=\"listOfTodos\"\n        >\n          {visibleTodos.map(todo => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              selectUser={selectUser}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","const API_URL = 'https://mate.academy/students-api';\n\nexport async function getTodos() {\n  const response = await fetch(`${API_URL}/todos`);\n\n  return response.json();\n}\n\nexport async function getUser(id: number) {\n  const users = await fetch(`${API_URL}/users/${id}`);\n\n  return users.json();\n}\n","import React, { useEffect, useState } from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\ninterface Props {\n  id: number,\n  selectUser: (id: number) => void;\n}\n\nexport const CurrentUser: React.FC<Props> = ({\n  id,\n  selectUser,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  const getCurrentUser = async (userId: number) => {\n    const response = await getUser(userId);\n\n    setCurrentUser(response);\n  };\n\n  useEffect(() => {\n    getCurrentUser(id);\n  }, [id]);\n\n  return (\n    <>\n      {currentUser && (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:&nbsp;\n              {id}\n            </span>\n          </h2>\n\n          <h3\n            className=\"CurrentUser__name\"\n            data-cy=\"userName\"\n          >\n            {currentUser.name}\n          </h3>\n          <p className=\"CurrentUser__email\">{currentUser.email}</p>\n          <p className=\"CurrentUser__phone\">{currentUser.phone}</p>\n        </div>\n      )}\n      <button\n        type=\"button\"\n        className=\"CurrentUser__clear button\"\n        onClick={() => selectUser(0)}\n      >\n        Clear\n      </button>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const getServerTodos = async () => {\n    const response = await getTodos();\n\n    setTodos(response);\n  };\n\n  const selectUser = (id: number) => {\n    setSelectedUserId(id);\n  };\n\n  useEffect(() => {\n    getServerTodos();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          selectUser={selectUser}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              id={selectedUserId}\n              selectUser={selectUser}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}